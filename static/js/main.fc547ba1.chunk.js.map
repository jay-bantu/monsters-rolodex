{"version":3,"sources":["logo.svg","components/card/card.js","components/card-list/card-list.js","components/search-box/search-box.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","Cardlist","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","FilteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAAe,I,kBCiBAA,EAbF,SAACC,GAEV,OAEA,sBAAKC,UAAW,iBAAhB,UACI,qBAAKC,IAAK,UAAUC,IAAG,+BAA4BH,EAAMI,QAAQC,GAA1C,4BACxB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCQVC,G,MAZE,SAAAR,GACb,OACI,qBAAKC,UAAY,YAAjB,SAECD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC3B,cAAC,EAAD,CAAuBA,QAAWA,GAAvBA,EAAQC,WCIZM,G,MAXG,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAE7B,OAEA,qBAAKZ,UAAY,SAAjB,SACM,uBAAOa,KAAK,SAASF,YAAcA,EAAaG,SAAWF,QC8BtDG,E,kDAhCb,aAAc,IAAD,8BACX,gBACKC,MAAO,CACVR,SAAS,GACTS,YAAY,IAJH,E,qDAQb,WAAoB,IAAD,OACjBC,MAAM,6CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAASc,S,oBAGzC,WAAS,IAAD,OACN,EAAgCE,KAAKR,MAA9BR,EAAP,EAAOA,SAAUS,EAAjB,EAAiBA,YAEXQ,EAAmBjB,EAASkB,QAAO,SAAAvB,GAAO,OAC9CA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAGlD,OACE,gCACE,kDACA,cAAC,EAAD,CAAWhB,YAAa,SAAWC,aAAe,SAAAiB,GAAK,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WAC5F,cAAC,EAAD,CAAUvB,SAAYiB,W,GA1BZO,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fc547ba1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\n\r\nimport './card.css'\r\n\r\nconst Card = (props)=>{\r\n\r\n    return(\r\n\r\n    <div className =\"card-container\">\r\n        <img alt= 'monster' src = {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\r\n       <h2>{props.monster.name}</h2>\r\n       <p>{props.monster.email}</p>\r\n       \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React from 'react';\r\n\r\nimport Card from '../card/card'\r\n\r\nimport './card-list.css'\r\n\r\n\r\nconst Cardlist = props =>{\r\n    return(\r\n        <div className = 'card-list'>\r\n        \r\n        {props.monsters.map(monster => \r\n        <Card key={monster.id} monster = {monster}>\r\n        </Card>)}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cardlist;","import React from 'react'\r\n\r\nimport './search-box.css'\r\n\r\n\r\nconst SearchBox = ({placeholder, handleChange})=>{\r\n\r\n    return(\r\n\r\n    <div className = 'search'>\r\n          <input type='search' placeholder= {placeholder} onChange ={handleChange}  />\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\n\nimport Cardlist from './components/card-list/card-list';\nimport SearchBox from './components/search-box/search-box';\n\nclass App extends Component{\n  constructor(){\n    super()\n    this.state ={\n      monsters:[],\n      searchField:''\n    }\n  }\n\n  componentDidMount(){\n    fetch('http://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters:users}))\n  }\n\n  render(){\n    const {monsters, searchField} = this.state;\n\n    const FilteredMonsters = monsters.filter(monster=>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    \n    return(\n      <div>\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder= 'search'   handleChange ={e =>{this.setState({searchField: e.target.value})}} />\n        <Cardlist monsters = {FilteredMonsters}/> \n      </div>\n    )\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}